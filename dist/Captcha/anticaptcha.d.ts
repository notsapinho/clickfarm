export namespace settings {
    export const clientKey: string;
    export const websiteSToken: null;
    export const recaptchaDataSValue: null;
    export const phrase: null;
    const _case: null;
    export { _case as case };
    export const numeric: null;
    export const math: null;
    export const minLength: null;
    export const maxLength: null;
    export const languagePool: null;
    export const comment: null;
    export const connectionTimeout: number;
    export const firstAttemptWaitingInterval: number;
    export const normalWaitingInterval: number;
    export const isVerbose: boolean;
    export const taskId: number;
    export const funcaptchaApiJSSubdomain: null;
    export const funcaptchaDataBlob: null;
}
export function setAPIKey(key: any): void;
export function setAPIKey(key: any): void;
export function shutUp(): void;
export function shutUp(): void;
export function getBalance(): Promise<any>;
export function getBalance(): Promise<any>;
export function solveImage(body: any): Promise<any>;
export function solveImage(body: any): Promise<any>;
export function reportIncorrectImageCaptcha(): Promise<any>;
export function reportIncorrectImageCaptcha(): Promise<any>;
export function solveRecaptchaV2Proxyless(websiteURL: any, websiteKey: any): Promise<any>;
export function solveRecaptchaV2Proxyless(websiteURL: any, websiteKey: any): Promise<any>;
export function solveRecaptchaV2ProxyOn(websiteURL: any, websiteKey: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveRecaptchaV2ProxyOn(websiteURL: any, websiteKey: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveRecaptchaV3(websiteURL: any, websiteKey: any, minScore: any, pageAction: any): Promise<any>;
export function solveRecaptchaV3(websiteURL: any, websiteKey: any, minScore: any, pageAction: any): Promise<any>;
export function solveRecaptchaV2EnterpriseProxyless(websiteURL: any, websiteKey: any, enterprisePayload?: any): Promise<any>;
export function solveRecaptchaV2EnterpriseProxyless(websiteURL: any, websiteKey: any, enterprisePayload?: any): Promise<any>;
export function solveRecaptchaV2EnterpriseProxyOn(websiteURL: any, websiteKey: any, enterprisePayload: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveRecaptchaV2EnterpriseProxyOn(websiteURL: any, websiteKey: any, enterprisePayload: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveRecaptchaV3Enterprise(websiteURL: any, websiteKey: any, minScore: any, pageAction: any): Promise<any>;
export function solveRecaptchaV3Enterprise(websiteURL: any, websiteKey: any, minScore: any, pageAction: any): Promise<any>;
export function reportIncorrectRecaptcha(): Promise<any>;
export function reportIncorrectRecaptcha(): Promise<any>;
export function reportCorrectRecaptcha(): Promise<any>;
export function reportCorrectRecaptcha(): Promise<any>;
export function solveHCaptchaProxyless(websiteURL: any, websiteKey: any): Promise<any>;
export function solveHCaptchaProxyless(websiteURL: any, websiteKey: any): Promise<any>;
export function solveHCaptchaProxyOn(websiteURL: any, websiteKey: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveHCaptchaProxyOn(websiteURL: any, websiteKey: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveFunCaptchaProxyless(websiteURL: any, websiteKey: any): Promise<any>;
export function solveFunCaptchaProxyless(websiteURL: any, websiteKey: any): Promise<any>;
export function solveFunCaptchaProxyOn(websiteURL: any, websiteKey: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveFunCaptchaProxyOn(websiteURL: any, websiteKey: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveGeeTestProxyless(websiteURL: any, gt: any, challenge: any, apiSubdomain: any, getLib: any): Promise<any>;
export function solveGeeTestProxyless(websiteURL: any, gt: any, challenge: any, apiSubdomain: any, getLib: any): Promise<any>;
export function solveGeeTestProxyOn(websiteURL: any, gt: any, challenge: any, apiSubdomain: any, getLib: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function solveGeeTestProxyOn(websiteURL: any, gt: any, challenge: any, apiSubdomain: any, getLib: any, proxyType: any, proxyAddress: any, proxyPort: any, proxyLogin: any, proxyPassword: any, userAgent: any, cookies: any): Promise<any>;
export function waitForResult(taskId: any): Promise<any>;
export function waitForResult(taskId: any): Promise<any>;
export function JSONRequest(methodName: any, payLoad: any): Promise<any>;
export function JSONRequest(methodName: any, payLoad: any): Promise<any>;
export function checkForErrors(response: any): Promise<any>;
export function checkForErrors(response: any): Promise<any>;
export function getCookies(): any;
export function getCookies(): any;
export function delay(time: any): Promise<any>;
export function delay(time: any): Promise<any>;
//# sourceMappingURL=anticaptcha.d.ts.map